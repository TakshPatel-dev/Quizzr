{"0":{"id":7075,"question":"Which command prints the last 15 lines of a file?","description":"Understanding file reading with `tail` in Bash.","answers":{"answer_a":"head -n 15 file.txt","answer_b":"cat -n 15 file.txt","answer_c":"tail -n 15 file.txt","answer_d":"print -n 15 file.txt","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"false","answer_c_correct":"true","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `tail -n 15` command prints the last 15 lines of a file.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"1":{"id":7632,"question":"Which variable inside a function holds the name of the currently executing function?","description":"Understanding how to reference the function name dynamically.","answers":{"answer_a":"$FUNCNAME","answer_b":"$0","answer_c":"$@","answer_d":"$#","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `$FUNCNAME` variable stores the name of the function being executed.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"2":{"id":7077,"question":"Which command finds and replaces text within a file?","description":"Understanding text processing in Bash.","answers":{"answer_a":"find 'old' 'new' file.txt","answer_b":"sed 's/old/new/g' file.txt","answer_c":"awk 's/old/new/' file.txt","answer_d":"replace 'old' 'new' file.txt","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `sed 's/old/new/g' file.txt` command replaces all occurrences of 'old' with 'new'.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"3":{"id":7448,"question":"Which of the following is the correct way to check if a file exists and is writable?","description":"Understanding file existence and write permission checks in Bash.","answers":{"answer_a":"[ -e file.txt ] && [ -w file.txt ]","answer_b":"[ -f file.txt -and -w file.txt ]","answer_c":"[ -file file.txt -write ]","answer_d":"[ -w file.txt ]","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `-e` operator checks if a file exists, and `-w` checks if it is writable.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"4":{"id":8093,"question":"How do you retrieve a file over HTTPS using curl?","description":"Understanding how to fetch files securely over HTTPS.","answers":{"answer_a":"curl -O https://url","answer_b":"wget https://url","answer_c":"curl --insecure https://url","answer_d":"wget --secure https://url","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"`curl -O https://url` retrieves the file from a secure HTTPS server.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"5":{"id":7731,"question":"How can you extract a substring from the 5th character to the end of a string stored in `str`?","description":"Understanding advanced substring extraction in Bash.","answers":{"answer_a":"${str:4}","answer_b":"echo $str | cut -c5-","answer_c":"substr($str, 4)","answer_d":"${str:5}","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `${variable:start}` syntax extracts a substring from the specified start index.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"6":{"id":8107,"question":"How do you check the availability of a remote server using telnet on a specific port?","description":"Understanding how to check port availability using telnet.","answers":{"answer_a":"telnet hostname port","answer_b":"telnet -p port hostname","answer_c":"telnet port hostname","answer_d":"telnet --port hostname","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"`telnet hostname port` connects to a specific port on a remote server.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"7":{"id":7836,"question":"Which command removes a key-value pair from an associative array?","description":"Understanding how to delete keys in an associative array.","answers":{"answer_a":"unset my_array[\"key\"]","answer_b":"delete my_array key","answer_c":"remove_key my_array key","answer_d":"my_array.remove(\"key\")","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Using `unset my_array[\"key\"]` removes a key-value pair from an associative array.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"8":{"id":7380,"question":"Which command redirects only standard output to a file while leaving standard error in the terminal?","description":"Understanding how to redirect only standard output.","answers":{"answer_a":"command > output.txt 2>/dev/tty","answer_b":"command > output.txt 2>&1","answer_c":"command 2>&1 > output.txt","answer_d":"command > output.txt 2> /dev/null","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `2>/dev/tty` keeps standard error on the terminal while redirecting output to a file.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"9":{"id":7466,"question":"How do you execute different commands based on the success or failure of a previous command?","description":"Understanding how to execute commands based on exit statuses.","answers":{"answer_a":"command && success_command || failure_command","answer_b":"command || success_command && failure_command","answer_c":"if command; then success_command; else failure_command; fi","answer_d":"command | success_command || failure_command","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"`&&` runs on success, and `||` runs on failure.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"10":{"id":8094,"question":"Which option in wget allows downloading a file in the background?","description":"Understanding how to download files in the background with wget.","answers":{"answer_a":"--background","answer_b":"--quiet","answer_c":"--no-clobber","answer_d":"--continue","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"`wget --background` downloads a file in the background.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"11":{"id":8042,"question":"Which command removes the execute permission for the group on a file?","description":"Understanding how to modify file permissions for the group in Bash.","answers":{"answer_a":"chmod g-x filename","answer_b":"chmod o-x filename","answer_c":"chmod u-x filename","answer_d":"chmod g-xr filename","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"`chmod g-x filename` removes the execute permission for the group on the file.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"12":{"id":7927,"question":"How do you continue executing a loop even if a command inside it fails?","description":"Understanding error handling inside loops.","answers":{"answer_a":"Use `command || continue` inside the loop","answer_b":"Use `set -e`","answer_c":"Use `break`","answer_d":"Ignore errors globally","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Using `command || continue` ensures the loop keeps running even if an error occurs.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"13":{"id":7926,"question":"What does `exec 2> error.log` do in a script?","description":"Understanding how to redirect all error messages to a file.","answers":{"answer_a":"Redirects all errors to error.log","answer_b":"Logs all output to error.log","answer_c":"Ignores all errors","answer_d":"Exits on error","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Using `exec 2> error.log` redirects all error messages to `error.log`.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"14":{"id":7072,"question":"How do you check if a variable is empty in Bash?","description":"Understanding conditionals for checking empty variables.","answers":{"answer_a":"if [[ -n $var ]];","answer_b":"if [[ $var == empty ]];","answer_c":"if [[ -z $var ]];","answer_d":"if [[ -eq $var 0 ]];","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"false","answer_c_correct":"true","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `-z` flag in `[[ -z $var ]]` checks if a variable is empty.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"15":{"id":7647,"question":"How do you redirect a function’s output to a file?","description":"Understanding output redirection for functions in Bash.","answers":{"answer_a":"my_function > output.txt","answer_b":"my_function | write output.txt","answer_c":"my_function >| output.txt","answer_d":"my_function >> file","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Using `>` redirects the output of the function to a file.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"16":{"id":7928,"question":"Which signal is sent when you execute `kill -9 <PID>`?","description":"Understanding process termination signals in Bash.","answers":{"answer_a":"SIGKILL","answer_b":"SIGTERM","answer_c":"SIGSTOP","answer_d":"SIGHUP","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Using `kill -9` sends `SIGKILL`, which forcefully terminates the process.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"17":{"id":7099,"question":"How do you check available disk space in Bash?","description":"Understanding disk usage commands.","answers":{"answer_a":"ls -disk","answer_b":"du -h","answer_c":"df -h","answer_d":"disk space","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"false","answer_c_correct":"true","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `df -h` command shows available disk space in human-readable format.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"18":{"id":7951,"question":"Which command runs a script with detailed debugging information?","description":"Understanding how to debug Bash scripts.","answers":{"answer_a":"bash -x script.sh","answer_b":"debug script.sh","answer_c":"bash --debug script.sh","answer_d":"trace script.sh","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Using `bash -x` enables debugging mode by printing each command before execution.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"19":{"id":7950,"question":"Which operator ensures that a command is executed only if the previous command fails?","description":"Understanding conditional execution in Bash.","answers":{"answer_a":"||","answer_b":"&&","answer_c":";","answer_d":"&","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Using `command1 || command2` executes `command2` only if `command1` fails.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Medium"},"quizMetaData":{"createdBy":"18656047691","difficulty":"medium","topic":"bash","totalQuestions":"20","createdAt":"29/05/2025\t15:39:17","description":"ddds","time":"30"},"marks":"3","answer":{"0":"answer_b","1":"answer_c","2":"answer_b","3":"answer_c","4":"answer_b","5":"answer_c","6":"answer_b","7":"answer_a","8":"answer_d","9":"answer_b","10":"answer_b","11":"answer_a","12":"answer_c","13":"answer_c","14":"answer_b","15":"answer_c","16":"answer_d","17":"answer_a","18":"answer_b","19":"answer_b"}}