{"0":{"id":1327,"question":"Which parameter in a HorizontalPodAutoscaler specifies the minimum number of replicas to maintain?","description":"Setting a minimum number of replicas ensures a baseline of availability even during low usage.","answers":{"answer_a":"minReplicas","answer_b":"replicaCount","answer_c":"minimumPods","answer_d":"baselineReplicas","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The minReplicas parameter in a HorizontalPodAutoscaler sets the minimum number of replicas for autoscaling.","tip":null,"tags":[{"name":"Openshift"}],"category":"DevOps","difficulty":"Hard"},"1":{"id":1308,"question":"How can you configure a DeploymentConfig to perform a custom action after the deployment succeeds?","description":"Lifecycle hooks in DeploymentConfigs allow for custom actions during deployments.","answers":{"answer_a":"Add a post-deployment hook","answer_b":"Set an oc deploy trigger","answer_c":"Define a post-lifecycle handler","answer_d":"Create an after-success trigger","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"A post-deployment hook allows a custom action to run after a DeploymentConfig succeeds.","tip":null,"tags":[{"name":"Openshift"}],"category":"DevOps","difficulty":"Hard"},"2":{"id":1251,"question":"What command in OpenShift would you use to patch a running pod with new configurations?","description":"The oc patch command is used to apply updates to the configurations of existing resources, like pods.","answers":{"answer_a":"oc update pod <pod-name>","answer_b":"oc patch pod <pod-name>","answer_c":"oc edit pod <pod-name>","answer_d":"oc config pod <pod-name>","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The oc patch command allows for modifying live configurations of resources, such as pods.","tip":null,"tags":[{"name":"Openshift"}],"category":"DevOps","difficulty":"Hard"},"3":{"id":10112,"question":"A team needs to implement Terraform for a multi-account AWS environment. Which approach would be most secure and maintainable?","description":"Implementing Terraform for multi-account architectures.","answers":{"answer_a":"Use a single AWS account for simplicity","answer_b":"Implement an account factory with cross-account roles and centralized operations","answer_c":"Create separate, unrelated Terraform configurations for each account","answer_d":"Share admin credentials across all accounts","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"An account factory with cross-account roles and centralized operations provides the most secure and maintainable multi-account approach. Account factory standardizes account creation and configuration. Cross-account roles enable secure access without credential sharing. Centralized operations provide consistent management across accounts. This approach implements security best practices for account isolation, enables standardized governance across all accounts, maintains separation of duties while allowing centralized management, provides scalable account provisioning, and creates a secure multi-account architecture that follows AWS best practices.","tip":null,"tags":[{"name":"Terraform"}],"category":"DevOps","difficulty":"Hard"},"4":{"id":918,"question":"What did the 1.8 version of Kubernetes introduce?","description":null,"answers":{"answer_a":"Taints and Tolerations","answer_b":"Cluster level","answer_c":"Logging Secrets","answer_d":"Federated Clusters","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":null,"tip":null,"tags":[{"name":"Kubernetes"}],"category":"DevOps","difficulty":"Hard"},"5":{"id":1378,"question":"How can Keycloak roles be mapped to OpenShift roles for access control?","description":"Role mappings allow Keycloak roles to translate into OpenShift access controls.","answers":{"answer_a":"By creating a Client Role Mapper","answer_b":"By setting up LDAP attributes","answer_c":"Through SAML assertions","answer_d":"Using API permissions","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"A Client Role Mapper can map Keycloak roles to OpenShift roles, providing role-based access control.","tip":null,"tags":[{"name":"Openshift"}],"category":"DevOps","difficulty":"Hard"},"6":{"id":1380,"question":"What configuration must be set in Keycloak to make it an identity provider for OpenShift?","description":"Keycloak needs specific settings to integrate as an identity provider in OpenShift.","answers":{"answer_a":"Realm is created with OpenShift as a client","answer_b":"OAuth2 is disabled in Keycloak","answer_c":"LDAP sync is enabled","answer_d":"Keycloak is set to disable SSL","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"In Keycloak, a realm is created with OpenShift configured as a client to enable SSO integration.","tip":null,"tags":[{"name":"Openshift"}],"category":"DevOps","difficulty":"Hard"},"7":{"id":1338,"question":"When setting pod priority, which value allows the pod to preempt lower-priority pods but not be preempted by others?","description":"Pod priority helps control which pods should run under resource constraints or preempt others.","answers":{"answer_a":"Highest","answer_b":"SystemCritical","answer_c":"High","answer_d":"Guaranteed","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `SystemCritical` priority level allows the pod to preempt lower-priority pods and prevents it from being preempted by others.","tip":null,"tags":[{"name":"Openshift"}],"category":"DevOps","difficulty":"Hard"},"8":{"id":10079,"question":"A team needs to provide infrastructure self-service capabilities to developers without giving direct Terraform access. Which approach would be most effective?","description":"Implementing developer self-service for infrastructure with Terraform.","answers":{"answer_a":"Give developers full AWS console access","answer_b":"Implement Terraform Cloud with a service catalog and VCS integration","answer_c":"Have operations team handle all infrastructure requests","answer_d":"Let developers run Terraform locally","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Terraform Cloud with a service catalog and VCS integration provides the most effective self-service approach. Service catalogs offer pre-approved infrastructure patterns developers can consume. VCS integration enables requesting infrastructure through familiar git workflows. Terraform Cloud manages execution and state. This approach enables self-service while maintaining governance, provides a simplified developer experience, enforces compliance through pre-approved patterns, maintains complete audit trails of infrastructure requests, and creates a scalable platform for infrastructure provisioning that works for both developers and operations teams.","tip":null,"tags":[{"name":"Terraform"}],"category":"DevOps","difficulty":"Hard"},"9":{"id":10066,"question":"A team using Terraform needs to implement a CI/CD pipeline for infrastructure changes. Which approach would provide the best balance of safety and automation?","description":"Implementing effective CI/CD for Terraform.","answers":{"answer_a":"Automatically apply all changes without review","answer_b":"Implement plan and apply stages with approval gates and plan persistence","answer_c":"Run terraform plan but apply changes manually","answer_d":"Restrict terraform apply to a single person","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Plan and apply stages with approval gates and plan persistence provide the optimal CI/CD approach for Terraform. The pipeline runs terraform plan automatically on changes, stores the plan file, requires human approval for significant changes, and applies the exact approved plan. This approach balances automation with appropriate human oversight, ensures applied changes match what was reviewed, prevents drift between plan and apply, provides a complete audit trail of infrastructure changes, and creates a secure yet efficient workflow for infrastructure deployment.","tip":null,"tags":[{"name":"Terraform"}],"category":"DevOps","difficulty":"Hard"},"quizMetaData":{"createdBy":"18656047691","difficulty":"hard","topic":"devops","totalQuestions":"10","createdAt":"25/05/2025\t01:44:34","description":"gjhbnk","time":"30"},"marks":"0","answer":{}}