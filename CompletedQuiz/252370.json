{"0":{"id":1243,"question":"What OpenShift resource should be used to manage encryption and decryption of sensitive data, like database passwords?","description":"Secrets in OpenShift are used to securely store sensitive data, like passwords or API keys.","answers":{"answer_a":"ConfigMap","answer_b":"Secret","answer_c":"DeploymentConfig","answer_d":"Role","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Secret objects securely store and manage sensitive information, providing secure access to applications.","tip":null,"tags":[{"name":"Openshift"}],"category":"DevOps","difficulty":"Medium"},"1":{"id":10106,"question":"A team is experiencing excessive cloud costs for their Terraform-managed infrastructure. Which approach would most effectively reduce costs?","description":"Implementing cost optimization for Terraform infrastructure.","answers":{"answer_a":"Manually shut down resources when not in use","answer_b":"Implement right-sizing with scheduled scaling and lifecycle policies","answer_c":"Use spot instances for everything","answer_d":"Switch to a cheaper cloud provider","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Right-sizing with scheduled scaling and lifecycle policies provides the most effective cost optimization. Right-sizing ensures resources match actual requirements without over-provisioning. Scheduled scaling reduces capacity during predictable low-usage periods. Lifecycle policies automatically clean up unused resources. This approach aligns infrastructure capacity with actual needs, automatically reduces costs during off-hours without manual intervention, eliminates unnecessary resource costs, implements cloud cost optimization best practices, and creates an efficient infrastructure that maintains performance while minimizing cost.","tip":null,"tags":[{"name":"Terraform"}],"category":"DevOps","difficulty":"Medium"},"2":{"id":1014,"question":"______ is distributed key-value store that provides a reliable way to store data that needs to be accessed by a distributed system or cluster of machines.","description":null,"answers":{"answer_a":"A Kubernetes pod","answer_b":"A Kubernetes service","answer_c":"A Kubernetes volume","answer_d":"etcd","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"true","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":null,"tip":null,"tags":[{"name":"Kubernetes"}],"category":"DevOps","difficulty":"Medium"},"3":{"id":1234,"question":"What is the purpose of the oc rollout command in OpenShift?","description":"The oc rollout command is used to monitor, pause, resume, or roll back deployments in OpenShift.","answers":{"answer_a":"To manually add nodes to a cluster","answer_b":"To monitor or undo application deployments","answer_c":"To back up application data","answer_d":"To create a new OpenShift route","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The oc rollout command manages the state of deployments, allowing users to monitor or revert changes.","tip":null,"tags":[{"name":"Openshift"}],"category":"DevOps","difficulty":"Medium"},"4":{"id":10115,"question":"A team needs to improve resource naming and organization in their cloud infrastructure. Which Terraform approach would be most effective?","description":"Implementing organized resource management with Terraform.","answers":{"answer_a":"Let each developer create their own naming convention","answer_b":"Implement resource hierarchies with naming modules and tagging standards","answer_c":"Use random identifiers for all resources","answer_d":"Create all resources in a flat hierarchy","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Resource hierarchies with naming modules and tagging standards provide the most effective organization approach. Resource hierarchies group related resources logically. Naming modules ensure consistent naming patterns. Tagging standards apply metadata for better resource organization. This approach enables finding and managing resources efficiently, organizes resources in a logical structure matching their purpose, applies consistent identifiers across all infrastructure, enables filtering and grouping resources by various dimensions, and creates a well-organized infrastructure that scales with increasing resource numbers.","tip":null,"tags":[{"name":"Terraform"}],"category":"DevOps","difficulty":"Medium"},"5":{"id":938,"question":"Kubernetes Manifests can be in JSON or YAML format","description":null,"answers":{"answer_a":"True","answer_b":"False","answer_c":null,"answer_d":null,"answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":null,"tip":"not good","tags":[{"name":"Kubernetes"}],"category":"DevOps","difficulty":"Medium"},"6":{"id":10129,"question":"Your team needs to implement logging for a containerized application deployed across multiple hosts. Which approach would be most effective?","description":"Implementing effective logging for containerized applications.","answers":{"answer_a":"Write all logs to local files inside each container","answer_b":"Implement a centralized logging architecture with container-aware drivers","answer_c":"Use volumes to store logs on the host","answer_d":"Disable logging to improve performance","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"A centralized logging architecture with container-aware drivers provides the most effective logging solution. Container-aware logging drivers (like fluentd, syslog, or json-file with a collector) capture logs from stdout/stderr across all containers. Centralization in systems like Elasticsearch, Splunk, or Loki enables cross-container correlation, searching, and alerting. This approach preserves logs when containers are removed, scales across multiple hosts, maintains consistent logging structure across services, enables comprehensive filtering and searching, and creates a complete observability solution without sacrificing container portability.","tip":null,"tags":[{"name":"Docker"}],"category":"DevOps","difficulty":"Medium"},"7":{"id":1153,"question":"If you want to trigger a manual rollout of an updated image for a DeploymentConfig, which command would you use?","description":null,"answers":{"answer_a":"oc rollout latest <DeploymentConfig-name>","answer_b":"oc apply rollout <DeploymentConfig-name>","answer_c":"oc rollout start <DeploymentConfig-name>","answer_d":"oc deploy <DeploymentConfig-name>","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":"answer_a","explanation":null,"tip":null,"tags":[{"name":"Openshift"}],"category":"DevOps","difficulty":"Medium"},"8":{"id":1429,"question":"What does the `docker commit` command do?","description":"The `docker commit` command creates a new image from a containerâ€™s changes.","answers":{"answer_a":"It starts a stopped container","answer_b":"It creates a new image based on changes made to a container","answer_c":"It deletes a container","answer_d":"It uploads an image to the Docker registry","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `docker commit` command captures changes made in a container and creates a new image from those changes.","tip":null,"tags":[{"name":"Docker"}],"category":"DevOps","difficulty":"Medium"},"9":{"id":1015,"question":"What Are Kubernetes Controllers?","description":null,"answers":{"answer_a":"Kubernetes controllers are Replicaset, Deployment controller.","answer_b":"Kubernetes controllers are Surverless, Deployment capacitor.","answer_c":null,"answer_d":null,"answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":null,"tip":null,"tags":[{"name":"Kubernetes"}],"category":"DevOps","difficulty":"Medium"},"quizMetaData":{"createdBy":"18656047691","difficulty":"medium","topic":"devops","totalQuestions":"10","createdAt":"25/05/2025\t00:48:39","description":"dfgdfhbgnfgh","time":"30"},"marks":"0","answer":{}}