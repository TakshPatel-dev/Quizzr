{"0":{"id":8531,"question":"Which function removes duplicate values from an array while preserving keys?","description":"Understanding `array_unique()` in PHP.","answers":{"answer_a":"array_values()","answer_b":"array_flip()","answer_c":"array_unique()","answer_d":"array_merge()","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"false","answer_c_correct":"true","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"`array_unique()` removes duplicate values while keeping the array structure intact.","tip":null,"tags":[{"name":"PHP"}],"category":"Code","difficulty":"Medium"},"1":{"id":8293,"question":"What will be the data type of the variable $var after execution?\n```php\n$var = 'true';\n$var = (bool) $var;\n```","description":"Understanding type casting in PHP.","answers":{"answer_a":"boolean","answer_b":"string","answer_c":"integer","answer_d":"Error","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Casting any non-empty string to a boolean results in true.","tip":null,"tags":[{"name":"PHP"}],"category":"Code","difficulty":"Medium"},"2":{"id":8617,"question":"Which function joins array elements into a string using a delimiter?","description":"Understanding how `implode()` works.","answers":{"answer_a":"split()","answer_b":"explode()","answer_c":"implode()","answer_d":"join()","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"false","answer_c_correct":"true","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"`implode()` combines array elements into a string using a specified separator.","tip":null,"tags":[{"name":"PHP"}],"category":"Code","difficulty":"Medium"},"3":{"id":10028,"question":"A JavaScript application needs to implement rate limiting for API calls. Which pattern would be most effective?","description":"Implementing efficient API consumption in JavaScript applications.","answers":{"answer_a":"Make API calls without restrictions","answer_b":"Implement a token bucket algorithm with retry queuing","answer_c":"Set a fixed delay between all API calls","answer_d":"Limit the application to 10 API calls total","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"A token bucket algorithm with retry queuing provides the most effective rate limiting. The token bucket algorithm allows bursts of activity while maintaining a sustainable average rate. Retry queuing manages requests that exceed rate limits. This approach prevents API quota exhaustion, handles rate limit responses gracefully, optimizes API usage by prioritizing important requests, adapts to different API rate limits, and creates a resilient system that continues functioning even under API constraints.","tip":null,"tags":[{"name":"JavaScript"}],"category":"Code","difficulty":"Medium"},"4":{"id":9072,"question":"What does the `session.auto_start` directive do?","description":"Understanding the behavior of session auto-start in PHP.","answers":{"answer_a":"Automatically starts a session when a script executes","answer_b":"Regenerates session IDs automatically","answer_c":"Starts a session only when `session_start()` is called","answer_d":"Enables database session storage","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"When `session.auto_start` is enabled, PHP automatically starts a session at the beginning of every script execution.","tip":null,"tags":[{"name":"PHP"}],"category":"Code","difficulty":"Medium"},"5":{"id":1846,"question":"Which of the following can lead to a memory leak in Python?","description":"Certain patterns can lead to memory leaks by preventing the garbage collector from reclaiming memory.","answers":{"answer_a":"Using local variables","answer_b":"Having circular references involving objects with a '__del__' method","answer_c":"Using 'del' to delete objects","answer_d":"Using the 'gc.collect()' function","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Circular references involving objects with a '__del__' method can lead to memory leaks because the garbage collector cannot determine the correct order to delete these objects.","tip":null,"tags":[{"name":"Python"}],"category":"Code","difficulty":"Medium"},"6":{"id":10001,"question":"A JavaScript application has inconsistent code style across a large team. Which approach would most effectively standardize the codebase?","description":"Standardizing code quality in JavaScript team environments.","answers":{"answer_a":"Let each developer use their preferred style","answer_b":"Implement ESLint with Prettier and Git hooks for automated enforcement","answer_c":"Perform manual code reviews for style issues","answer_d":"Rewrite the entire codebase periodically","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"ESLint with Prettier and Git hooks provides automated style standardization across teams. ESLint enforces code quality rules and best practices. Prettier automatically formats code to a consistent style. Git hooks (like pre-commit hooks) ensure these tools run before code is committed. This automated approach ensures consistent style without relying on manual processes, catches style issues before they enter the codebase, reduces meaningless style discussions in code reviews, and scales effectively across large teams and codebases.","tip":null,"tags":[{"name":"JavaScript"}],"category":"Code","difficulty":"Medium"},"7":{"id":1451,"question":"What does the 'zip()' function do in Python?","description":"The 'zip()' function is used to combine two or more iterables element-wise.","answers":{"answer_a":"It sorts two iterables","answer_b":"It combines two or more iterables element-wise","answer_c":"It concatenates lists","answer_d":"It creates nested lists from the given iterables","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The 'zip()' function returns an iterator that combines elements from two or more iterables element-wise, until the shortest iterable is exhausted.","tip":null,"tags":[{"name":"Python"}],"category":"Code","difficulty":"Medium"},"8":{"id":470,"question":"Which of the following elements marks The Ruby Text Component Of A Ruby annotation?","description":null,"answers":{"answer_a":"Rubytxt","answer_b":"Rt","answer_c":"Ruby","answer_d":"R","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":"answer_a","explanation":null,"tip":null,"tags":[],"category":"Code","difficulty":"Medium"},"9":{"id":9073,"question":"Which session function removes all session variables but does not destroy the session itself?","description":"Understanding how to clear session data without terminating the session.","answers":{"answer_a":"session_destroy()","answer_b":"session_unset()","answer_c":"unset($_SESSION)","answer_d":"session_reset()","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `session_unset()` function removes all session variables without destroying the session.","tip":null,"tags":[{"name":"PHP"}],"category":"Code","difficulty":"Medium"},"quizMetaData":{"createdBy":"18656047691","difficulty":"medium","topic":"code","totalQuestions":"10","createdAt":"25/05/2025\t14:39:29","description":"vcxxcvcx","time":"30"},"marks":"0","answer":{"0":"answer_a"}}