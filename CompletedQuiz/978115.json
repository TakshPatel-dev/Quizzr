{"0":{"id":10130,"question":"A team needs to ensure that their containerized application can handle graceful shutdowns. Which implementation would be most effective?","description":"Implementing graceful shutdown handling in Docker containers.","answers":{"answer_a":"Kill containers immediately when they need to be stopped","answer_b":"Implement proper signal handling with a suitable init process","answer_c":"Restart containers automatically when they stop","answer_d":"Use the --force flag when stopping containers","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Proper signal handling with a suitable init process ensures graceful container shutdown. Signal handling in the application code captures SIGTERM signals from Docker and initiates graceful shutdown procedures like completing in-flight requests and closing database connections. A suitable init process (like tini or dumb-init) correctly forwards signals to the application and handles process reaping. This approach prevents data corruption, transaction interruption, and connection leaks during container termination, while enabling seamless rolling updates and scaling operations without service disruption.","tip":null,"tags":[{"name":"Docker"}],"category":"DevOps","difficulty":"Medium"},"1":{"id":10163,"question":"Your team needs to implement container resource monitoring for a production environment. Which approach would provide the most actionable insights?","description":"Implementing effective container monitoring.","answers":{"answer_a":"Check resource usage manually when problems occur","answer_b":"Implement hierarchical monitoring with container-aware metrics and business KPIs","answer_c":"Monitor only host-level metrics","answer_d":"Create dashboards with every possible metric","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Hierarchical monitoring with container-aware metrics and business KPIs provides the most insightful observability. Container-aware metrics (CPU, memory, network by container) provide infrastructure-level visibility. Business KPIs connect resource usage to application outcomes. Hierarchical organization relates metrics at different levels (host, container, application). This comprehensive approach connects technical metrics to business impact, enables identifying both symptoms and root causes, provides context for prioritizing issues, spans infrastructure and application concerns, and creates actionable monitoring that supports both operations and business decision-making.","tip":null,"tags":[{"name":"Docker"}],"category":"DevOps","difficulty":"Medium"},"2":{"id":1404,"question":"Which command would you use to add a new node to an existing Docker Swarm as a worker?","description":"Adding nodes to an existing Swarm cluster expands the cluster's capacity for container management.","answers":{"answer_a":"docker swarm join --role worker","answer_b":"docker node join --role worker","answer_c":"docker swarm add worker","answer_d":"docker join worker","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `docker swarm join --role worker` command allows a new node to join an existing Swarm as a worker.","tip":null,"tags":[{"name":"Docker"}],"category":"DevOps","difficulty":"Medium"},"3":{"id":1152,"question":"Which OpenShift command would you use to view all available resources in the current project, including pods, services, and routes?","description":null,"answers":{"answer_a":"oc get all","answer_b":"oc get pods","answer_c":"oc describe project","answer_d":"oc show resources","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":"answer_a","explanation":null,"tip":null,"tags":[{"name":"Openshift"}],"category":"DevOps","difficulty":"Medium"},"4":{"id":10121,"question":"A containerized application is experiencing unexpected shutdowns in production. Upon investigation, you notice the container is being terminated with exit code 137. Which approach would most effectively resolve this issue?","description":"Troubleshooting container termination issues in production.","answers":{"answer_a":"Increase logging verbosity within the application","answer_b":"Configure appropriate memory limits and implement graceful shutdown handling","answer_c":"Restart the container more frequently","answer_d":"Disable all health checks on the container","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Exit code 137 indicates that the container was terminated by the OOM (Out Of Memory) killer, meaning it exceeded its memory limits. Configuring appropriate memory limits ensures containers have sufficient memory while preventing a single container from consuming all resources. Implementing graceful shutdown handling allows the application to properly clean up resources when receiving termination signals. This approach addresses the root cause (memory issues) while improving application resilience, rather than just treating symptoms or creating workarounds that don't solve the underlying problem.","tip":null,"tags":[{"name":"Docker"}],"category":"DevOps","difficulty":"Medium"},"5":{"id":1407,"question":"What is the purpose of the `docker service scale` command in Docker Swarm?","description":"Scaling a service allows you to increase or decrease the number of replicas for a service in Docker Swarm.","answers":{"answer_a":"It changes the number of nodes in the cluster","answer_b":"It adjusts the number of replicas for a service","answer_c":"It resizes the storage volumes","answer_d":"It restarts all services in the cluster","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `docker service scale` command adjusts the number of replicas running for a specific service.","tip":null,"tags":[{"name":"Docker"}],"category":"DevOps","difficulty":"Medium"},"6":{"id":1012,"question":"What is the most common type of container runtime used in Kubernetes?","description":null,"answers":{"answer_a":"rkt","answer_b":"Docker","answer_c":"containerd","answer_d":"lxd","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":null,"tip":null,"tags":[{"name":"Kubernetes"}],"category":"DevOps","difficulty":"Medium"},"7":{"id":1409,"question":"What is a stack in Docker Swarm?","description":"Stacks provide a way to deploy multiple services in Docker Swarm using a single configuration file.","answers":{"answer_a":"A configuration for a single container","answer_b":"A collection of services deployed as a single unit","answer_c":"A backup of all Docker containers","answer_d":"A load balancer for network traffic","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"A stack in Docker Swarm allows you to deploy and manage multiple services as a single unit.","tip":null,"tags":[{"name":"Docker"}],"category":"DevOps","difficulty":"Medium"},"8":{"id":1405,"question":"What is the purpose of a service in Docker Swarm?","description":"Services in Docker Swarm represent a task that a manager node distributes across worker nodes.","answers":{"answer_a":"To manage storage","answer_b":"To define and manage a group of replicated containers","answer_c":"To control network policies","answer_d":"To handle API requests","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"A service in Docker Swarm represents a group of replicated containers, allowing scaling and management across nodes.","tip":null,"tags":[{"name":"Docker"}],"category":"DevOps","difficulty":"Medium"},"9":{"id":1230,"question":"How does OpenShift handle secret data for applications, like API keys or passwords?","description":"OpenShift uses Secret objects to securely store and manage sensitive application data.","answers":{"answer_a":"By using the oc encrypt command","answer_b":"Through Secret objects that store and manage sensitive data securely","answer_c":"By writing them directly to environment variables","answer_d":"By encoding them in DeploymentConfig","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Secret objects in OpenShift securely store sensitive information like API keys and passwords.","tip":null,"tags":[{"name":"Openshift"}],"category":"DevOps","difficulty":"Medium"},"quizMetaData":{"createdBy":"99692866465","difficulty":"medium","topic":"devops","totalQuestions":"10","createdAt":"25/05/2025\t01:09:03","description":"dfsfdsf","time":"30"},"marks":"0","answer":{}}