{"0":{"id":9789,"question":"What is the purpose of Django's template tags and filters?","description":"Understanding the role of template tags and filters in Django's template system.","answers":{"answer_a":"To define URL patterns","answer_b":"To interact with databases","answer_c":"To manage frontend styling","answer_d":"To manipulate template output","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"true","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":"answer_a","explanation":"Template tags and filters allow developers to perform logic and transformations within Django templates.","tip":"Use template tags for control flow and logic, while filters are ideal for data manipulation within templates.","tags":[{"name":"Undefined"},{"name":"Django"}],"category":"Django","difficulty":"Easy"},"1":{"id":2500,"question":"Which method is used to save an instance of a model in Django?","description":"The save() method is used to save an instance of a model to the database.","answers":{"answer_a":"store()","answer_b":"insert()","answer_c":"save()","answer_d":"commit()","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"false","answer_c_correct":"true","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"In Django, you use the save() method to save an instance of a model to the database.","tip":null,"tags":[{"name":"Django"}],"category":"Django","difficulty":"Easy"},"2":{"id":2620,"question":"How do you install Celery in a Django project?","description":"Installing Celery is the first step to adding task management capabilities to a Django project.","answers":{"answer_a":"pip install django-celery","answer_b":"pip install celery","answer_c":"pip install celery-beat","answer_d":"Add it to the Django settings file","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"To install Celery in a Django project, use 'pip install celery' to add Celery to your Python environment.","tip":null,"tags":[{"name":"Django"}],"category":"Django","difficulty":"Easy"},"3":{"id":2621,"question":"How can you specify the maximum number of retries for a Celery task?","description":"Configuring the maximum number of retries helps prevent infinite retries for a task that keeps failing.","answers":{"answer_a":"Use the max_retries argument in the task decorator","answer_b":"Specify max_retries in the Celery settings","answer_c":"Use the retry() method inside the task","answer_d":"Use the countdown parameter","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The max_retries argument in the task decorator allows you to set the maximum number of retries for a Celery task, ensuring it stops retrying after the specified number of attempts.","tip":null,"tags":[{"name":"Django"}],"category":"Django","difficulty":"Easy"},"4":{"id":9784,"question":"What is the purpose of Django's ORM?","description":"Understanding the role of Django's Object-Relational Mapping in web development.","answers":{"answer_a":"To handle HTTP requests","answer_b":"To interact with databases","answer_c":"To manage frontend styling","answer_d":"To secure user authentication","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Django's ORM provides an abstraction layer to interact with databases using Python objects.","tip":"ORM simplifies database operations and reduces the need for writing raw SQL queries.","tags":[{"name":"Undefined"}],"category":"Django","difficulty":"Easy"},"5":{"id":2670,"question":"What does the RetrieveAPIView class in DRF do?","description":"The RetrieveAPIView class is used to retrieve a single object based on its primary key.","answers":{"answer_a":"Retrieves a list of objects","answer_b":"Retrieves a single object by primary key","answer_c":"Updates an existing object","answer_d":"Deletes an object","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The RetrieveAPIView class in DRF is used to retrieve a single object by its primary key, making it ideal for detail views.","tip":null,"tags":[{"name":"Django"}],"category":"Django","difficulty":"Easy"},"6":{"id":2653,"question":"What is Django REST Framework (DRF)?","description":"Django REST Framework is a toolkit used to build web APIs with Django.","answers":{"answer_a":"A front-end JavaScript library","answer_b":"A tool to build RESTful APIs with Django","answer_c":"A database management tool","answer_d":"A server monitoring tool","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Django REST Framework is a toolkit that makes it easy to build RESTful APIs using Django.","tip":null,"tags":[{"name":"Django"}],"category":"Django","difficulty":"Easy"},"7":{"id":2510,"question":"Which settings file key specifies the list of domains that are allowed to make requests to the Django app?","description":"The 'ALLOWED_HOSTS' setting in Django specifies which host/domain names are allowed to access the application.","answers":{"answer_a":"HOST_DOMAINS","answer_b":"ALLOWED_HOSTS","answer_c":"VALID_DOMAINS","answer_d":"AUTHORIZED_HOSTS","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The 'ALLOWED_HOSTS' setting is a list of strings representing the host/domain names that are valid for the Django site.","tip":null,"tags":[{"name":"Django"}],"category":"Django","difficulty":"Easy"},"8":{"id":2768,"question":"How do you register a model to be managed by Django Admin?","description":"Registering a model allows it to be managed through the Django Admin interface.","answers":{"answer_a":"Call admin.site.register() with the model","answer_b":"Add the model to settings.py","answer_c":"Use the 'register_model' decorator on the model class","answer_d":"Create a new admin user","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"To register a model with Django Admin, call admin.site.register() and pass the model as an argument, making it available in the Admin interface.","tip":null,"tags":[{"name":"Django"}],"category":"Django","difficulty":"Easy"},"9":{"id":2507,"question":"What is the purpose of the '__str__' method in a Django model?","description":"The '__str__' method is used to provide a human-readable representation of an object.","answers":{"answer_a":"To convert an object to JSON","answer_b":"To define the object's URL","answer_c":"To provide a string representation of the object","answer_d":"To validate the object","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"false","answer_c_correct":"true","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The '__str__' method in Django models returns a human-readable string representation of the model instance.","tip":null,"tags":[{"name":"Django"}],"category":"Django","difficulty":"Easy"},"quizMetaData":{"createdBy":"99692866465","difficulty":"easy","topic":"django","totalQuestions":"10","createdAt":"25/05/2025\t02:00:00","description":"asadsa","time":"30"},"marks":"0","answer":{}}