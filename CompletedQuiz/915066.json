{"0":{"id":7898,"question":"How can you suppress standard output while keeping error messages visible?","description":"Understanding output redirection in Bash.","answers":{"answer_a":"command > /dev/null","answer_b":"command &> /dev/null","answer_c":"command 2>/dev/null","answer_d":"command | null","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Using `command > /dev/null` discards standard output while keeping error messages.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Easy"},"1":{"id":7169,"question":"How do you create a symbolic link to a file?","description":"Understanding symbolic links in Bash.","answers":{"answer_a":"ln -s target link_name","answer_b":"link -s target link_name","answer_c":"symlink target link_name","answer_d":"mklink target link_name","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `ln -s` command creates a symbolic link to a file.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Easy"},"2":{"id":7526,"question":"Which loop type is commonly used for waiting until a process finishes?","description":"Understanding how to use loops for process management.","answers":{"answer_a":"while","answer_b":"for","answer_c":"until","answer_d":"foreach","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"A `while` loop is commonly used for waiting until a process completes.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Easy"},"3":{"id":7033,"question":"Which command is used to list all environment variables?","description":"Understanding how to view environment variables in Bash.","answers":{"answer_a":"ls env","answer_b":"showenv","answer_c":"printenv","answer_d":"echo $ENV","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"false","answer_c_correct":"true","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `printenv` command lists all environment variables in Bash.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Easy"},"4":{"id":7440,"question":"Which operator is used to check if two strings are not equal?","description":"Understanding string comparison in Bash.","answers":{"answer_a":"!=","answer_b":"-ne","answer_c":"<>","answer_d":"!eq","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `!=` operator checks if two strings are not equal in Bash.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Easy"},"5":{"id":7520,"question":"Which loop structure is best used when you do not know in advance how many times it should run?","description":"Understanding when to use `while` loops.","answers":{"answer_a":"while","answer_b":"for","answer_c":"until","answer_d":"foreach","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"A `while` loop is best used when the number of iterations is unknown beforehand.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Easy"},"6":{"id":7151,"question":"Which command is used to remove a file in Bash?","description":"Understanding how to delete files.","answers":{"answer_a":"remove filename","answer_b":"rm filename","answer_c":"delete filename","answer_d":"erase filename","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"false","answer_b_correct":"true","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `rm` command removes a file from the filesystem.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Easy"},"7":{"id":7799,"question":"How do you display all array elements separated by a comma?","description":"Understanding how to format output in Bash arrays.","answers":{"answer_a":"IFS=\",\"; echo \"${animals[*]}\"; IFS=$'\\n'","answer_b":"echo \"${animals[@]}\"","answer_c":"print(animals, delimiter=',')","answer_d":"echo animals | tr ' ' ','","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Setting `IFS=\",\"` formats array output as a comma-separated string.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Easy"},"8":{"id":7779,"question":"How do you loop through all elements in an array?","description":"Understanding how to iterate over array elements in Bash.","answers":{"answer_a":"for i in \"${my_array[@]}\"; do echo \"$i\"; done","answer_b":"foreach my_array as i; echo \"$i\";","answer_c":"while read i from my_array; echo \"$i\";","answer_d":"loop my_array","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"Using `for i in \"${my_array[@]}\"; do ... done` loops through all elements.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Easy"},"9":{"id":7507,"question":"What is the output of the following script?\n```bash\nfor i in 1 2 3; do echo -n \"$i \"; done\n```","description":"Understanding `for` loop output formatting in Bash.","answers":{"answer_a":"1 2 3 ","answer_b":"1\n2\n3","answer_c":"123","answer_d":"Error","answer_e":null,"answer_f":null},"multiple_correct_answers":"false","correct_answers":{"answer_a_correct":"true","answer_b_correct":"false","answer_c_correct":"false","answer_d_correct":"false","answer_e_correct":"false","answer_f_correct":"false"},"correct_answer":null,"explanation":"The `-n` option in `echo` prevents a new line, so the numbers print on the same line with spaces.","tip":null,"tags":[{"name":"BASH"}],"category":"bash","difficulty":"Easy"},"quizMetaData":{"createdBy":"18656047691","difficulty":"easy","topic":"bash","totalQuestions":"10","createdAt":"29/05/2025\t15:26:47","description":"SCRIPT","time":"30"},"marks":"4","answer":{"0":"answer_a","1":"answer_c","2":"answer_c","3":"answer_d","4":"answer_b","5":"answer_a","6":"answer_a","7":"answer_a","8":"answer_a","9":"answer_c"}}